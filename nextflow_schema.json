{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/eager/master/nextflow_schema.json",
    "title": "nf-core/eager pipeline parameters",
    "description": "A fully reproducible and state-of-the-art ancient DNA analysis pipeline",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.(c|t)sv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row. See [usage docs](https://nf-co.re/eager/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "fasta_fai": {
                    "type": "string",
                    "default": "None",
                    "description": "Path to samtools FASTA index (typically ending in '.fai'). If not supplied will be made for you.",
                    "help_text": "If you want to use a pre-existing `samtools faidx` index, use this to specify the required FASTA index file for the selected reference genome. This should be generated by samtools faidx and has a file suffix of `.fai`.",
                    "fa_icon": "fas fa-address-book"
                },
                "fasta_dict": {
                    "type": "string",
                    "default": "None",
                    "description": "Path to picard sequence dictionary file (typically ending in '.dict'). If not supplied will be made for you.",
                    "help_text": "If you want to use a pre-existing `picard CreateSequenceDictionary` dictionary file, use this to specify the required `.dict` file for the selected reference genome.",
                    "fa_icon": "fas fa-address-book"
                },
                "fasta_mapperindexdir": {
                    "type": "string",
                    "default": "None",
                    "description": "Path to directory containing index files of the FASTA for a given mapper.",
                    "help_text": "For most people this will likely be the same directory that contains the file you provided to `--fasta`.\n\nIf you want to use pre-existing `bwa index` indices, the directory should contain files ending in '.amb' '.ann' '.bwt'. If you want to use pre-existing `bowtie2 build` indices, the directory should contain files ending in'.1.bt2', '.2.bt2', '.rev.1.bt2'. \n\nIn any case do not include the files themselves in the path.  nf-core/eager will automagically detect the index files by searching for the FASTA filename with the corresponding `bwa index`/`bowtie2 build` file suffixes.  If not supplied will be made for you.\n\n",
                    "fa_icon": "fas fa-address-book"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "Specify to save any pipeline-generated reference genome indices  in the results directory.",
                    "help_text": "Use this if you do not have pre-made reference FASTA indices for `bwa`, `samtools` and `picard`. If you turn this on, the indices nf-core/eager generates for you and will be saved in the `<your_output_dir>/results/reference_genomes` for you. If not supplied, nf-core/eager generated index references will be deleted.\n\n> modifies SAMtools index command: `-c`",
                    "fa_icon": "fas fa-save"
                },
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details.",
                    "hidden": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Directory / URL base for iGenomes references.",
                    "default": "s3://ngi-igenomes/igenomes",
                    "fa_icon": "fas fa-cloud-download-alt",
                    "hidden": true
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        },
        "preprocessing": {
            "title": "Preprocessing",
            "type": "object",
            "description": "Removal of adapters, paired-end merging, poly-G removal etc.",
            "default": "",
            "properties": {
                "sequencing_qc_tool": {
                    "type": "string",
                    "default": "fastqc",
                    "description": "Specify which tool to use for sequencing quality control.",
                    "help_text": "Specify which tool to use for sequencing quality control.\n\nFalco is designed as a drop-in replacement for FastQC but written in C++ for faster computation. We recommend using falco with very large datasets (due to reduced memory constraints).",
                    "enum": ["fastqc", "falco"],
                    "fa_icon": "fas fa-hammer"
                },
                "skip_preprocessing": {
                    "type": "boolean",
                    "description": "Specify to skip all preprocessing steps (adapter removal, paired-end merging, poly-g trimming etc).",
                    "help_text": "Specify to skip all preprocessing steps (adapter removal, paired-end merging, poly-g trimming etc).\n\nThis will also mean you will only get one set of FastQC results (of the input reads).",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_tool": {
                    "type": "string",
                    "default": "fastp",
                    "description": "Specify which preprocessing tool to use.",
                    "enum": ["fastp", "adapterremoval"],
                    "help_text": "Specify which preprocessing tool to use.\n\nAdapterRemoval is commonly used in palaeogenomics, however fastp has similar performance and has many additional functionality (including inbuilt complexity trimming) that can be often useful.",
                    "fa_icon": "fas fa-hammer"
                },
                "preprocessing_skippairmerging": {
                    "type": "boolean",
                    "description": "Specify to skip read-pair merging.",
                    "fa_icon": "fas fa-forward",
                    "help_text": "Turns off the paired-end read merging, and will result in paired-end mapping modes being used during reference of reads again alignment.\n\nThis can be useful in cases where you have long ancient DNA reads, modern DNA,  or when you want to utilise mate-pair 'spatial' information..\n\n\u26a0\ufe0f If you run this and also with --preprocessing_minlength set to a value (as is by default!), you may end up removing single reads from either the pair1 or pair2 file. These reads will be NOT be mapped when aligning with either bwa or bowtie, as both can only accept one (forward) or two (forward and reverse) FASTQs as input in paired-end mode.\n\n> \u26a0\ufe0f If you run metagenomic screening as well as skipping merging, all reads will be screened as independent reads - not as pairs! - as all FASTQ files from BAM filtering are merged into one. This merged file is _not_ saved in results directory.\n\n> Modifies AdapterRemoval parameter: `--collapse`\n> Modifies fastp parameter: `--merge`"
                },
                "preprocessing_excludeunmerged": {
                    "type": "boolean",
                    "description": "Specify to exclude pairs that did not overlap sufficiently for merging (i.e., keep merged reads only).",
                    "fa_icon": "fas fa-trash-alt",
                    "help_text": "Specify to exclude pairs that did not overlap sufficiently for merging (i.e., keep merged reads only), in otherwords singletons (i.e. reads missing a pair), or un-merged reads (where there wasn't sufficient overlap) are discarded.\n\nMost ancient DNA molecules are very short, and the majority are expected to merge.  Specifying this parameter can sometimes be useful when dealing with ultra-short aDNA reads to reduce the number of longer-reads you may have in your library that are derived from modern contamination. It can also speed up run time of mapping steps.\n\nYou may want to use this if you want ensure only the best quality reads for your analysis, but with the penalty of potentially losing still valid data (even if some reads have slightly lower quality and/or are longer). It is highly recommended when using 'dedup' deduplication tool."
                },
                "preprocessing_skipadaptertrim": {
                    "type": "boolean",
                    "description": "Specify to skip removal of adapters.",
                    "help_text": "Specify to turn off trimming of adapters from reads.\n\nYou may wish to do this if you are using public data (e.g. ENA, SRA), that _should_ have all library artefacts from reads.\n\nThis will override any other adapter parameters provided (i.e, `--preprocessing_adapterlist` and or/ `--preprocessing_adapter{1,2}` will be ignored)!\n\n> Modifies AdapterRemoval parameter: `--adapter1` and  `--adapter2` (sets both to an empty string)\n> Applies fastp parameter: `--disable_adapter_trimming`",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapter1": {
                    "type": "string",
                    "default": "None",
                    "description": "Specify the nucleotide sequence for the forward read/R1.",
                    "fa_icon": "fas fa-grip-lines",
                    "help_text": "Specify a nucleotide sequence for the forward read/R1.\n\nIf not modified by the user, the default for the particular preprocessing tool will be used. Therefore, to turn off adapter trimming use `--preprocessing_skipadaptertrim`.\n\n> Modifies AdapterRemoval parameter: `--adapter1`\n> Modifies fastp parameter: `--adapter_sequence`"
                },
                "preprocessing_adapter2": {
                    "type": "string",
                    "default": "None",
                    "description": "Specify the nucleotide sequence for the forward read/R2.",
                    "fa_icon": "fas fa-grip-lines",
                    "help_text": "Specify a nucleotide sequence for the forward read/R2.\n\nIf not modified by the user, the default for the particular preprocessing tool will be used. To turn off adapter trimming use `--preprocessing_skipadaptertrim`.\n\n> Modifies AdapterRemoval parameter: `--adapter2`\n> Modifies fastp parameter: `--adapter_sequence_r2`"
                },
                "preprocessing_adapterlist": {
                    "type": "string",
                    "default": "None",
                    "description": "Specify a list of all possible adapters to trim. Overrides --preprocessing_adapter1/2. Formats: .txt (AdapterRemoval) or .fasta. (fastp).",
                    "help_text": "Allows to supply a file with a list of adapter (combinations) to remove from all files. \n\nOverrides the `--preprocessing_adapter1`/`--preprocessing_adapter2` parameters . \n\nNote that the two tools have slightly different behaviours.\n\nFor AdapterRemoval this consists of a two column table with a `.txt` extension: first column represents forward strand, second column for reverse strand. You must supply all possibly combinations, one per line, and this list is applied to all files. Only Adapters in this list will be screened for and removed. See AdapterRemoval documentation for more information.\n\nFor fastp this consists of a standard FASTA format with a `.fasta`/`.fa`/`.fna`/`.fas` extension. The adapter sequence in this file should be at least 6bp long, otherwise it will be skipped. fastp first will perform auto-detection of reads and will be removed , and then _additionally_ adapters present in the FASTA file one by one will be removed.\n\n> Modifies AdapterRemoval parameter: `--adapter-list`\n> Modifies fastp parameter: `--adapter_fasta`",
                    "fa_icon": "fas fa-list"
                },
                "preprocessing_minlength": {
                    "type": "integer",
                    "default": 25,
                    "description": "Specify the minimum length reads must have to be retained.",
                    "help_text": "Specify the minimum length reads must have to be retained. \n\nReads smaller than this length after trimming are discarded and not included in downstream analyses. Typically in ancient DNA users will set this to 30 or for very old samples around 25 bp - reads any shorter that this often are not specific enough to provide useful information.\n\n> Modifies AdapterRemoval parameter: `--minlength`\n> Modifies fastp parameter: `--length_required`",
                    "fa_icon": "fas fa-ruler"
                },
                "preprocessing_trim5p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify number of bases to hard-trim from 5 prime or front of reads. Exact behaviour varies per tool, see documentation.",
                    "help_text": "Specify number of bases to hard-trim from 5 prime or front of reads. Exact behaviour varies per tool, see documentation. By default set to `0` to not perform any hard trimming.\n\nThis parameter allows users to 'hard' remove a number of bases from the beginning or end of reads, regardless of quality.\n\n\u26a0\ufe0f when this trimming occurs depends on the tool, i.e., the exact behaviour is not the same between AdapterRemoval and fastp.\n\nFor fastp: this 5p/3p trimming occurs _prior_ to any other trimming (quality, poly-G, adapter).  Please see the [fastp documentation](https://github.com/OpenGene/fastp#global-trimming) for more information. If you wish to use this to remove damage prior mapping (to allow more specific mapping), ensure you have manually removed adapters/quality trimmed **prior** to giving the reads to nf-core/eager. Alternatively, you can use Bowtie2's inbuilt pre-mapping read-end trimming functionality. Note that nf-core/eager only allows this hard trimming equally for both forward and reverse reads (i.e., you cannot provide different values for the 5p end for R1 and R2).\n\nFor AdapterRemoval, this trimming happens _after_ the removal of adapters, however prior to quality trimming. Therefore this is more suitable for hard-removal of damage prior mapping (however the Bowtie2 system will be more reliable).\n\n> Modifies AdapterRemoval parameters: `--trim5p`\n> Modifies fastp parameters: `--trim_front1` and/or `--trim_front2`\n",
                    "fa_icon": "fas fa-cut"
                },
                "preprocessing_trim3p": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify number of bases to hard-trim from 3 prime or tail of reads. Exact behaviour varies per tool, see documentation.",
                    "fa_icon": "fas fa-cut",
                    "help_text": "Specify number of bases to hard-trim from 3 prime or tail of reads. Exact behaviour varies per tool, see documentation. By default set to `0` to not perform any hard trimming.\n\nThis parameter allows users to 'hard' remove a number of bases from the beginning or end of reads, regardless of quality.\n\n\u26a0\ufe0f when this trimming occurs depends on the tool, i.e., the exact behaviour is not the same between AdapterRemoval and fastp.\n\nFor fastp: this 5p/3p trimming occurs _prior_ to any other trimming (quality, poly-G, adapter).  Please see the [fastp documentation](https://github.com/OpenGene/fastp#global-trimming) for more information. If you wish to use this to remove damage prior mapping (to allow more specific mapping), ensure you have manually removed adapters/quality trimmed **prior** to giving the reads to nf-core/eager. Alternatively, you can use Bowtie2's inbuilt pre-mapping read-end trimming functionality. Note that nf-core/eager only allows this hard trimming equally for both forward and reverse reads (i.e., you cannot provide different values for the 3p end for R1 and R2).\n\nFor AdapterRemoval, this trimming happens _after_ the removal of adapters, however prior to quality trimming. Therefore this is more suitable for hard-removal of damage prior mapping (however the Bowtie2 system will be more reliable).\n\n> Modifies AdapterRemoval parameters: `--trim3p`\n> Modifies fastp parameters: `--trim_tail1` and/or `--trim_tail2`\n"
                },
                "preprocessing_savepreprocessedreads": {
                    "type": "boolean",
                    "description": "Specify to save the preprocessed reads in the results directory.",
                    "fa_icon": "fas fa-save",
                    "help_text": "Specify to save the preprocessed reads in FASTQ format the results directory. \n\nThis can be useful for re-analysing in FASTQ files manually, or uploading to public data repositories such as ENA/SRA (provided you don't do length filtering nor merging)."
                },
                "preprocessing_fastp_complexityfilter": {
                    "type": "boolean",
                    "description": "Specify to turn on sequence complexity filtering of reads with fastp.",
                    "help_text": "Performs a poly-G tail removal step in the beginning of the pipeline using fastp.\n\nThis can be useful for trimming ploy-G tails from short-fragments sequenced on two-colour Illumina chemistry such as NextSeqs or NovaSeqs (where no-fluorescence is read as a G on two-colour chemistry), which can inflate reported GC content values.\n\n> Modifies fastp parameter: `--trim_poly_g`",
                    "fa_icon": "fas fa-cut"
                },
                "preprocessing_fastp_complexityfilter_threshold": {
                    "type": "integer",
                    "default": 10,
                    "description": "Specify the complexity threshold that must be reached or exceeded to retain reads.",
                    "help_text": "This option can be used to define the minimum length of a poly-G tail to begin low complexity trimming. By default, this is set to a value of 10 unless the user has chosen something specifically using this option.\n\n> Modifies fastp parameter: `--poly_g_min_len`",
                    "fa_icon": "fas fa-ruler"
                },
                "preprocessing_adapterremoval_preserve5p": {
                    "type": "boolean",
                    "description": "Skip AdapterRemoval base trimming (n, quality) of 5 prime end.",
                    "help_text": "Turns off quality based trimming at the 5p end of reads when any of the AdapterRemoval quality or N trimming options are used. Only 3p end of reads will be removed.\n\nThis also entirely disables quality based trimming of collapsed reads, since both ends of these are informative for PCR duplicate filtering. For more information see the AdapterRemoval [documentation](https://adapterremoval.readthedocs.io/en/stable/manpage.html#cmdoption-adapterremoval-preserve5p).\n\n> Modifies AdapterRemoval parameters: `--preserve5p`",
                    "fa_icon": "fas fa-shield-alt"
                },
                "preprocessing_adapterremoval_skipqualitytrimming": {
                    "type": "boolean",
                    "description": "Skip AdapterRemoval quality and N trimming from ends of reads.",
                    "help_text": "Turns off AdapterRemoval quality trimming from ends of reads. \n\nThis can be useful to reduce runtime when running public data that has already been processed.\n\n> Modifies AdapterRemoval parameters: `--trimqualities` ",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapterremoval_trimbasequalitymin": {
                    "type": "integer",
                    "default": 20,
                    "description": "Specify AdapterRemoval minimum base quality for trimming off bases.",
                    "help_text": "Defines the minimum read quality per base that is required for a base to be kept. Individual bases at the ends of reads falling below this threshold will be clipped off. Default is set to 20.\n\n> Modifies AdapterRemoval parameter: `--minquality`",
                    "fa_icon": "fas fa-ruler-vertical"
                },
                "preprocessing_adapterremoval_skipntrimming": {
                    "type": "boolean",
                    "description": "Skip AdapterRemoval N trimming (quality trimming only).",
                    "help_text": "Turns off AdapterRemoval N trimming from ends of reads. \n\nThis can be useful to reduce runtime when running public data that has already been processed.\n\n> Modifies AdapterRemoval parameters: `--trimns` ",
                    "fa_icon": "fas fa-forward"
                },
                "preprocessing_adapterremoval_adapteroverlap": {
                    "type": "integer",
                    "default": 1,
                    "description": "Specify the AdapterRemoval minimum adapter overlap required for trimming.",
                    "fa_icon": "fas fa-ruler-horizontal",
                    "help_text": "Specifies a minimum number of bases that overlap with the adapter sequence before AdapterRemoval trims adapters sequences from reads.\n\n> Modifies AdapterRemoval parameter: `--minadapteroverlap`"
                },
                "preprocessing_adapterremoval_qualitymax": {
                    "type": "integer",
                    "default": 41,
                    "description": "Specify the AdapterRemoval maximum Phred score used in input FASTQ files",
                    "help_text": "Specify maximum Phred score of the quality field of FASTQ files. \n\nThe quality-score range can vary depending on the machine and version (e.g. see diagram [here](https://en.wikipedia.org/wiki/FASTQ_format#Encoding), and this allows you to increase from the default AdapterRemoval value of 41. \n\nNote that while this theoretically can provide you with more confident and precise base call information, many downstream tools only accept FASTQ files with Phred scores limited to a max of 41, and therefore increasing the default for this parameter may make the resulting preprocessed files incompatible with some downstream tools.\n\n> Modifies AdapterRemoval parameters: `--qualitymax`",
                    "fa_icon": "fas fa-tachometer-alt"
                }
            },
            "fa_icon": "fas fa-cut"
        },
        "mapping": {
            "title": "Mapping",
            "type": "object",
            "description": "Options for aligning reads against reference genome(s)",
            "default": "",
            "properties": {
                "mapping_tool": {
                    "type": "string",
                    "default": "bowtie2",
                    "enum": ["bwaaln", "bwamem", "bowtie2", "circularmapper"],
                    "description": "Specify which mapper to use.",
                    "help_text": "Specify which mapping tool to use. Options are BWA aln ('`bwaaln`'), BWA mem ('`bwamem`'), circularmapper ('`circularmapper`'), or bowtie2 ('`bowtie2`'). BWA aln is the default and highly suited for short-read ancient DNA. BWA mem can be quite useful for modern DNA, but is rarely used in projects for ancient DNA. CircularMapper enhances the mapping procedure to circular references, using the BWA algorithm but utilizing a extend-remap procedure (see Peltzer et al 2016, Genome Biology for details). Bowtie2 is similar to BWA aln, and has recently been suggested to provide slightly better results under certain conditions ([Poullet and Orlando 2020](https://doi.org/10.3389/fevo.2020.00105)), as well as providing extra functionality (such as FASTQ trimming). Default is 'bwaaln'\n\nMore documentation can be seen for each tool under:\n\n- [BWA aln](http://bio-bwa.sourceforge.net/bwa.shtml#3)\n- [BWA mem](http://bio-bwa.sourceforge.net/bwa.shtml#3)\n- [CircularMapper](https://circularmapper.readthedocs.io/en/latest/contents/userguide.html)\n- [Bowtie2](http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml#command-line)",
                    "fa_icon": "fas fa-layer-group"
                },
                "fasta_largeref": {
                    "type": "boolean",
                    "description": "Specify to generate more recent '.csi' BAM indices. If your reference genome is larger than 3.5GB, this is recommended due to more efficient data handling with the '.csi' format over the older '.bai'.",
                    "help_text": "This parameter is required to be set for large reference genomes. If your reference genome is larger than 3.5GB, the `samtools index` calls in the pipeline need to generate `.csi` indices instead of `.bai` indices to compensate for the size of the reference genome (with samtools: `-c`). This parameter is not required for smaller references (including the human hg19 or grch37/grch38 references), but >4GB genomes have been shown to need `.csi` indices.",
                    "fa_icon": "fas fa-address-book"
                },
                "mapping_bwaaln_n": {
                    "type": "number",
                    "default": 0.01,
                    "description": "Specify the -n parameter for BWA aln, i.e. amount of allowed mismatches in the alignment.",
                    "help_text": "Configures the `bwa aln -n` parameter, defining how many mismatches are allowed in a read. Default is set following recommendations from [Oliva et al. 2021](https://doi.org/10.1093/bib/bbab076) who tested when aligning to human reference genomes. \n\nIf you're uncertain what to set check out this [Shiny App](https://apeltzer.shinyapps.io/bwa-mismatches/) for more information on how to set this parameter efficiently.\n\n> Modifies bwa aln parameter: `-n`",
                    "fa_icon": "fas fa-sort-numeric-down"
                },
                "mapping_bwaaln_k": {
                    "type": "integer",
                    "default": 2,
                    "description": "Specify the -k parameter for BWA aln, i.e. maximum edit distance allowed in a seed.",
                    "help_text": "Configures the bwa aln `-k` parameter for the maximum edit distance during the seeding phase of the mapping algorithm.\n\n> Modifies BWA aln parameter: `-k`",
                    "fa_icon": "fas fa-people-arrows"
                },
                "mapping_bwaaln_l": {
                    "type": "integer",
                    "default": 1024,
                    "description": "Specify the -l parameter for BWA aln i.e. the length of seeds to be used.",
                    "help_text": "Configures the length of the seed used in bwa aln `-l`. Default is set to be 'turned off' at the recommendation of [Oliva et al. 2021](https://doi.org/10.1093/bib/bbab076) who tested when aligning to human reference genomes. Seeding is 'turned off' by specifying an arbitrarily long number to force the entire read to act as the seed. \n\nNote: Despite being recommended, turning off seeding can result in long runtimes!\n\n> Modifies BWA aln parameter: `-l`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "mapping_bwaaln_o": {
                    "type": "integer",
                    "default": 2,
                    "description": "Specify the -o parameter for BWA aln i.e. the number of gaps allowed.",
                    "help_text": "Configures the number of gaps used in bwa aln. Default is set to bwa default.\n\n> Modifies BWA aln parameter: `-o`",
                    "fa_icon": "fas fa-people-arrows"
                },
                "mapping_bwamem_k": {
                    "type": "integer",
                    "default": 19,
                    "description": "Specify the -k parameter for BWA mem i.e. the  minimum seed length",
                    "help_text": "Configures the minimum seed length used in BWA-MEM. Default is set to BWA default.\n\n> Modifies BWA-MEM parameter: `-k`",
                    "fa_icon": "fas fa-seedling"
                },
                "mapping_bwamem_r": {
                    "type": "number",
                    "default": 1.5,
                    "description": "Specify the -k parameter for BWA mem i.e. the  minimum seed length",
                    "help_text": "Configures the re-seeding used in BWA-MEM. Default is set to BWA default.\n\n> Modifies BWA-MEM parameter: `-r`",
                    "fa_icon": "fas fa-angle-double-left"
                }
            },
            "fa_icon": "fas fa-layer-group"
        },
        "bam_filtering": {
            "title": "BAM Filtering",
            "type": "object",
            "description": "Options related to length, quality, and map status filtering of reads.",
            "default": "",
            "properties": {
                "run_bamfiltering": {
                    "type": "boolean",
                    "description": "Turn on filtering of reads in BAM files after mapping. By default, only mapped reads retained.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Turns on the filtering subworkflow for mapped BAM files coming out of the read alignment step. Filtering includes removal of unmapped reads, length filtering, and mapping quality filtering.\n\nWhen turning on bam filtering, by default only the mapped/unmapped filter is activated, thus only mapped reads are retained for downstream analyses. See `--bamfiltering_retainunmappedgenomicbam` to retain unmapped reads, if filtering only for length and/or quality is preferred.\n\nNote this subworkflow can also be activated if `--run_metagenomic_screening` is supplied."
                },
                "bamfiltering_minreadlength": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the minimum read length mapped reads should have for downstream genomic analysis.",
                    "help_text": "You can use this to remove mapped reads that fall below a certain length after mapping.\n\nThis can be useful to get more realistic 'endogenous DNA' or 'on target read' percentages.\n\nIf used _instead of_ minimum length read filtering at AdapterRemoval, you can get more more realistic endogenous DNA estimates when most of your reads are very short (e.g. in single-stranded libraries or samples with highly degraded DNA). In these cases, the default minimum length filter at earlier adapter clipping/read merging will remove a very large amount of your reads in your library (including valid reads), thus making an artificially small denominator for a typical endogenous DNA calculation. \n\nTherefore by retaining all of your reads until _after_ mapping (i.e., turning off the  adapter clipping/read merging filter), you can generate more 'real' endogenous DNA estimates immediately after mapping (with a better denominator). Then after estimating this, filter using this parameter to retain only 'useful' reads (i.e., those long enough to provide higher confidence of their mapped position) for downstream analyses.\n\nBy specifying `0`, no length filtering is performed.\n\nNote that by default the output BAM files of this step are _not_ stored in the results directory (as it is assumed that deduplicated BAM files are preferred). See `--bamfiltering_savefilteredbams` if you wish to save these.\n\n> Modifies tool parameter(s):\n> - filter_bam_fragment_length.py: `-l`",
                    "fa_icon": "fas fa-ruler-horizontal"
                },
                "bamfiltering_mappingquality": {
                    "type": "integer",
                    "default": 0,
                    "description": "Specify the minimum mapping quality reads should have for downstream genomic analysis.",
                    "help_text": "Specify a mapping quality threshold for mapped reads to be kept for downstream analysis.\n\nBy default all reads are retained and is therefore set to 0 to ensure no quality filtering is performed.\n\nNote that by default the output BAM files of this step are _not_ stored in the results directory (as it is assumed that deduplicated BAM files are preferred). See `--bamfiltering_savefilteredbams` if you wish to save these.\n\n> Modifies tool parameter(s):\n> - samtools view `-q`",
                    "fa_icon": "fas fa-thermometer-full"
                },
                "bamfilter_genomicbamfilterflag": {
                    "type": "integer",
                    "default": 4,
                    "fa_icon": "fas fa-flag",
                    "description": "Specify the SAM format flag of reads to remove during BAM filtering for downstream genomic steps. Generally not recommended to change.",
                    "help_text": "You can use this to customise the exact SAM format flag of reads you wish to _remove_ from your BAM file to for downstream _genomic_ analyses.\n\nYou can explore more using a tool from the Broad institute [here](https://broadinstitute.github.io/picard/explain-flags.html)\n\n> \u26a0\ufe0f Modify at your own risk, alternative flags are not necessarily supported in downstream steps!\n\n> Modifies tool parameter(s):\n>     - SAMtools: `-F`"
                },
                "bamfiltering_retainunmappedgenomicbam": {
                    "type": "boolean",
                    "description": "Specify to retain unmapped reads in the BAM file used for downstream genomic analyses.",
                    "help_text": "You can use this parameter to retain unmapped reads (optionally also length filtered) in the genomic BAM for downstream analysis. By default, the pipeline only keeps mapped reads for downstream analysis.\n\nThis is also turned on if `--metagenomicscreening_input` is set to `all`.\n\n> \u26a0\ufe0f This will likely slow down run time of downstream pipeline steps!\n\n> Modifies tool parameter(s):\n> - samtools view: `-f 4` / `-F 4`",
                    "fa_icon": "fas fa-piggy-bank"
                },
                "bamfiltering_generateunmappedfastq": {
                    "type": "boolean",
                    "description": "Generate FASTQ files containing only unmapped reads from the aligner generated BAM files.",
                    "help_text": "This turns on the generation and saving of FASTQs of only the unmapped reads from the mapping step in the results directory, using `samtools fastq`.\n\nThis could be useful if you wish to do other analysis of the unmapped reads independently of the pipeline.\n\nNote: the reads in these FASTQ files have _not_ undergone length of quality filtering\n\n> Modifies tool parameter(s):\n> - samtools fastq: `-f 4`",
                    "fa_icon": "fas fa-file-alt"
                },
                "bamfiltering_generatemappedfastq": {
                    "type": "boolean",
                    "description": "Generate FASTQ files containing only mapped reads from the aligner generated BAM files .",
                    "help_text": "This turns on the generation and saving of FASTQs of only the mapped reads from the mapping step in the results directory, using `samtools fastq`.\n\nThis could be useful if you wish to do other analysis of the mapped reads independently of the pipeline, such as remapping with different parameters (whereby only including mapped reads will speed up computation time during the re-mapping due to reduced input data).\n\nNote the reads in these FASTQ files have _not_ undergone length of quality filtering\n\n> Modifies tool parameter(s):\n> - samtools fastq: `-F 4`",
                    "fa_icon": "far fa-file-alt"
                },
                "bamfiltering_savefilteredbams": {
                    "type": "boolean",
                    "description": "Save in the results directory the intermediate filtered genomic BAM files that are sent for  downstream genomic analyses.",
                    "help_text": "This saves intermediate length and/or quality filtered genomic BAM files in the results directory.",
                    "fa_icon": "far fa-save"
                }
            },
            "fa_icon": "fas fa-filter"
        },
        "metagenomics": {
            "title": "Metagenomics",
            "type": "object",
            "description": "Options to related to metagenomic screening.",
            "default": "",
            "properties": {
                "run_metagenomicscreening": {
                    "type": "boolean",
                    "description": "Turn on metagenomic screening of mapped, unmapped, or all reads.",
                    "fa_icon": "fas fa-power-off",
                    "help_text": "Turns on the metagenomic screening subworkflow of the pipeline, where reads are screened against large databases. Typically used for pathogen screening or microbial community analysis.\n\nIf supplied, this will also turn on the BAM filtering subworkflow of the pipeline."
                },
                "metagenomicscreening_input": {
                    "type": "string",
                    "default": "unmapped",
                    "description": "Specify which type of reads to go into metagenomic screening.",
                    "enum": ["unmapped", "mapped", "all"],
                    "fa_icon": "fas fa-hand-pointer",
                    "help_text": "You can select which reads coming out of the read alignment step will be sent for metagenomic analysis.\n\nThis influences which reads are sent to this step, whether you want unmapped reads (used in most cases, as 'host reads' can often be contaminants in microbial genomes), mapped reads (e.g, when doing competitive against a genomic reference of multiple genomes and which to apply LCA correction), or all reads.\n\n> \u26a0\ufe0f If you skip paired-end merging, all reads will be screened as independent reads - not as pairs! - as all FASTQ files from BAM filtering are merged into one. This merged file is _not_ saved in results directory.\n\n> Modifies tool parameter(s):\n> - samtools fastq: `-f 4` / `-F 4`"
                }
            },
            "fa_icon": "fas fa-search"
        },
        "deduplication": {
            "title": "Deduplication",
            "type": "object",
            "description": "Options for removal of PCR duplicates",
            "default": "",
            "properties": {
                "skip_deduplication": {
                    "type": "boolean",
                    "description": "Specify to skip the removal of PCR duplicates.",
                    "fa_icon": "fas fa-forward"
                },
                "deduplication_tool": {
                    "type": "string",
                    "default": "markduplicates",
                    "description": "Specify which tool to use for deduplication.",
                    "help_text": "Sets the duplicate read removal tool. By default uses `markduplicates` from Picard. Alternatively an ancient DNA specific read deduplication tool `dedup` (Peltzer et al. 2016) is offered. The latter utilises both ends of paired-end data to remove duplicates (i.e. true exact duplicates, as markduplicates will over-zealously deduplicate anything with the same starting position even if the ends are different).\n\n> \u26a0\ufe0f DeDup can only be used on collapsed (i.e. merged) reads from paired-end sequencing.",
                    "enum": ["markduplicates", "dedup"],
                    "fa_icon": "fas fa-layer-group"
                }
            },
            "fa_icon": "fas fa-clone"
        },
        "mitochondrial_to_nuclear_ratio": {
            "title": "Mitochondrial to Nuclear Ratio",
            "type": "object",
            "description": "Options for the calculation of ratio of reads to one chromosome/FASTA entry against all others.",
            "default": "",
            "help_text": "If using TSV input, Mitochondrial to Nuclear Ratio calculation is calculated per deduplicated library (after lane merging)",
            "fa_icon": "fas fa-balance-scale-left",
            "properties": {
                "run_mtnucratio": {
                    "type": "boolean",
                    "description": "Turn on mitochondrial to nuclear ratio calculation.",
                    "help_text": "Turn on the module to estimate the ratio of mitochondrial to nuclear reads.",
                    "fa_icon": "fas fa-balance-scale-left"
                },
                "mitochondrion_header": {
                    "type": "string",
                    "default": "MT",
                    "description": "Specify the name of the reference FASTA entry corresponding to the mitochondrial genome (up to the first space).",
                    "help_text": "Specify the FASTA entry in the reference file specified as --fasta, which acts as the mitochondrial 'chromosome' to base the ratio calculation on. The tool only accepts the first section of the header before the first space. The default chromosome name is based on hs37d5/GrCH37 human reference genome.",
                    "fa_icon": "fas fa-heading"
                }
            }
        },
        "mapping_statistics": {
            "title": "Mapping statistics",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "mapstats_skip_preseq": {
                    "type": "boolean",
                    "help_text": "Turns off the computation of library complexity estimation.",
                    "description": "Turns off the computation of library complexity estimation.",
                    "fa_icon": "fas fa-forward"
                },
                "mapstats_preseq_mode": {
                    "type": "string",
                    "default": "c_curve",
                    "help_text": "Specify which mode of preseq to run.\n\nFrom the [PreSeq documentation](http://smithlabresearch.org/wp-content/uploads/manual.pdf):\n\nc curve is used to compute the expected complexity curve of a mapped read file with a hypergeometric formula\n\nlc extrap is used to generate the expected yield for theoretical larger experiments and bounds on the number of distinct reads in the library and the associated confidence intervals, which is computed by bootstrapping the observed duplicate counts histogram.",
                    "description": "Specify which mode of preseq to run.",
                    "fa_icon": "fas fa-toggle-on",
                    "enum": ["c_curve", "lc_extrap"]
                },
                "mapstats_preseq_stepsize": {
                    "type": "integer",
                    "default": 1000,
                    "description": "Specify the step size (i.e., sampling regularity) of Preseq.",
                    "help_text": "Can be used to configure the step size of Preseq's c_curve and lc_extrap method. Can be useful when few reads and allow Preseq to be used for extrapolation of shallow sequencing results.\n\n\n> Modifies tool parameter(s)\n>   - preseq: `-s`",
                    "fa_icon": "fas fa-shoe-prints"
                },
                "mapstats_preseq_terms": {
                    "type": "integer",
                    "default": 100,
                    "fa_icon": "fas fa-sort-numeric-up-alt",
                    "help_text": "Specify the maximum number of terms that lc_extrap mode will use.\n \n> Modifies preseq lc_extrap parameter: `-x`",
                    "description": "Specify the maximum number of terms that lc_extrap mode will use."
                },
                "mapstats_preseq_maxextrap": {
                    "type": "integer",
                    "default": 10000000000,
                    "fa_icon": "fas fa-ban",
                    "help_text": "Specify the maximum extrapolation that lc_extrap mode will perform.\n\n> Modifies preseq lc_extrap parameter: `-e`",
                    "description": "Specify the maximum extrapolation (lc_extrap mode only)"
                },
                "mapstats_preseq_bootstrap": {
                    "type": "integer",
                    "default": 100,
                    "fa_icon": "fab fa-bootstrap",
                    "help_text": "Specify the number of bootstraps lc_extrap mode will perform to calculate confidence intervals.\n\n> Modifies preseq lc_extrap parameter: `-n`",
                    "description": "Specify number of bootstraps to perform (lc_extrap mode only)"
                },
                "mapstats_preseq_cval": {
                    "type": "number",
                    "default": 0.95,
                    "fa_icon": "fas fa-check-circle",
                    "help_text": "Specify the allowed level of confidence intervals used for lc_extrap mode.\n\n> Modifies preseq lc_extrap parameter: `-c`",
                    "description": "Specify confidence interval level (lc_extrap mode only)"
                },
                "mapstats_preseq_defects_mode": {
                    "type": "boolean",
                    "description": "Turns on defects mode to extrapolate without testing for defects (lc_extrap mode only).",
                    "help_text": "Activates defects mode of `lc_extrap`, which does the extrapolation without testing for defects.\n\n> Modifies preseq lc_extrap parameter: `-D`",
                    "fa_icon": "fab fa-creative-commons-sampling-plus"
                }
            },
            "fa_icon": "fas fa-search"
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        },
        {
            "$ref": "#/definitions/preprocessing"
        },
        {
            "$ref": "#/definitions/mapping"
        },
        {
            "$ref": "#/definitions/bam_filtering"
        },
        {
            "$ref": "#/definitions/metagenomics"
        },
        {
            "$ref": "#/definitions/deduplication"
        },
        {
            "$ref": "#/definitions/mitochondrial_to_nuclear_ratio"
        },
        {
            "$ref": "#/definitions/mapping_statistics"
        }
    ]
}
