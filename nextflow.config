/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/eager Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // TODO nf-core: Specify your pipeline's command line flags
    // Input options
    input                      = null
    fasta                      = null
    fasta_fai                  = null
    fasta_dict                 = null
    fasta_mapperindexdir       = null
    fasta_largeref             = false

    // References
    genome                     = null
    igenomes_base              = 's3://ngi-igenomes/igenomes'
    igenomes_ignore            = false
    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                     = null
    tracedir                   = "${params.outdir}/pipeline_info"
    publish_dir_mode           = 'copy'
    email                      = null
    email_on_fail              = null
    plaintext_email            = false
    monochrome_logs            = false
    hook_url                   = null
    help                       = false
    version                    = false
    validate_params            = true
    show_hidden_params         = false
    schema_ignore_params       = 'genomes'


    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null


    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '128.GB'
    max_cpus                   = 16
    max_time                   = '240.h'

    // References
    save_reference = false

    // Sequencing QC
    sequencing_qc_tool = 'fastqc'

    // Preprocessing
    // TODO Add validation checks for tool specific params
    skip_preprocessing                               = false
    preprocessing_tool                               = 'fastp'
    preprocessing_skippairmerging                    = false
    preprocessing_excludeunmerged                    = false
    preprocessing_skipadaptertrim                    = false
    preprocessing_adapter1                           = null
    preprocessing_adapter2                           = null
    preprocessing_adapterlist                        = null
    preprocessing_minlength                          = 25
    preprocessing_savepreprocessedreads              = false
    preprocessing_trim5p                             = 0      // WARN: slightly different behaviour between fastp & adapterremoval
    preprocessing_trim3p                             = 0      // WARN: slightly different behaviour between fastp & adapterremoval
    preprocessing_fastp_complexityfilter             = false
    preprocessing_fastp_complexityfilter_threshold   = 10
    preprocessing_adapterremoval_preserve5p          = false
    preprocessing_adapterremoval_adapteroverlap      = 1
    preprocessing_adapterremoval_skipqualitytrimming = false
    preprocessing_adapterremoval_trimbasequalitymin  = 20
    preprocessing_adapterremoval_skipntrimming       = false
    preprocessing_adapterremoval_qualitymax          = 41

    // Mapping
    mapping_tool                = 'bwaaln'
    mapping_bwaaln_n            = 0.01 // From Oliva et al. 2021 (10.1093/bib/bbab076)
    mapping_bwaaln_k            = 2
    mapping_bwaaln_l            = 1024 // From Oliva et al. 2021 (10.1093/bib/bbab076)
    mapping_bwaaln_o            = 2 // From Oliva et al. 2021 (10.1093/bib/bbab076)
    mapping_bwamem_k            = 19
    mapping_bwamem_r            = 1.5
    mapping_bowtie2_alignmode   = 'local'
    mapping_bowtie2_sensitivity = 'sensitive'
    mapping_bowtie2_n           = 0
    mapping_bowtie2_l           = 20
    mapping_bowtie2_trim5       = 0
    mapping_bowtie2_trim3       = 0
    mapping_bowtie2_maxins      = 500

    // BAM Filtering
    run_bamfiltering                      = false
    bamfiltering_minreadlength            = 0
    bamfiltering_mappingquality           = 0
    bamfilter_genomicbamfilterflag        = 4
    bamfiltering_retainunmappedgenomicbam = false // downstream genomics only
    bamfiltering_generateunmappedfastq    = false
    bamfiltering_generatemappedfastq      = false
    bamfiltering_savefilteredbams         = false // can include unmapped reads if --bamfiltering_retainunmappedgenomicbam specified

    // Metagenomic Screening
    run_metagenomicscreening              = false
    run_metagenomics_complexityfiltering  = false
    metagenomicscreening_input            = 'unmapped' // mapped, all, unmapped -> mapped vs all specified in SAMTOOLS_FASTQ_MAPPED in modules.conf, unmapped hardcoded SAMTOOLS_FASTQ_UMAPPED
    metagenomics_complexity_tool          = 'bbduk'
    metagenomics_complexity_savefastq     = false
    metagenomics_complexity_entropy       = 0.3
    metagenomics_prinseq_mode             = 'entropy'
    metagenomics_prinseq_dustscore        = 0.5

    // Deduplication options
    skip_deduplication = false
    deduplication_tool = 'markduplicates'

    // Qualimap
    skip_qualimap = false
    snpcapture_bed = null

    // MtNucRatio
    run_mtnucratio = false
    mitochondrion_header = 'MT'

    // Mapping statistics options
    // Preseq
    mapstats_skip_preseq         = false
    mapstats_preseq_stepsize     = 1000
    mapstats_preseq_mode         = 'c_curve'
    mapstats_preseq_maxextrap    = 10000000000
    mapstats_preseq_terms        = 100
    mapstats_preseq_bootstrap    = 100
    mapstats_preseq_cval         = 0.95
    mapstats_preseq_defects_mode = false

    // Damage Calculation options
    skip_damage_calculation      = false
    damageprofiler_length        = 100
    damageprofiler_threshold     = 15
    damageprofiler_yaxis         = 0.3
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Load nf-core/eager custom profiles from different institutions.
// Warning: Uncomment only if a pipeline-specific instititutional config already exists on nf-core/configs!
try {
   includeConfig "${params.custom_config_base}/pipeline/eager.config"
} catch (Exception e) {
   System.err.println("WARNING: Could not load nf-core/config/eager profiles: ${params.custom_config_base}/pipeline/eager.config")
}

// Additional configs for subworkflows
includeConfig 'subworkflows/nf-core/bam_split_by_region/nextflow.config'

profiles {
    debug {
        dumpHashes             = true
        process.beforeScript   = 'echo $HOSTNAME'
        cleanup = false
    }
    conda {
        conda.enabled          = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    mamba {
        conda.enabled          = true
        conda.useMamba         = true
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    docker {
        docker.enabled         = true
        docker.registry        = 'quay.io'
        docker.userEmulation   = true
        conda.enabled          = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    arm {
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled    = true
        singularity.autoMounts = true
        conda.enabled          = false
        docker.enabled         = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    podman {
        podman.enabled         = true
        podman.registry        = 'quay.io'
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        shifter.enabled        = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    shifter {
        shifter.enabled        = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        charliecloud.enabled   = false
        apptainer.enabled      = false
    }
    charliecloud {
        charliecloud.enabled   = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        apptainer.enabled      = false
    }
    apptainer {
        apptainer.enabled      = true
        conda.enabled          = false
        docker.enabled         = false
        singularity.enabled    = false
        podman.enabled         = false
        shifter.enabled        = false
        charliecloud.enabled   = false
    }
    gitpod {
        executor.name          = 'local'
        executor.cpus          = 16
        executor.memory        = 60.GB
    }
    test            { includeConfig 'conf/test.config'          }
    test_full       { includeConfig 'conf/test_full.config'     }
    test_humanbam   { includeConfig 'conf/test_humanbam.config' }
}


// Load igenomes.config if required
if (!params.igenomes_ignore) {
    includeConfig 'conf/igenomes.config'
} else {
    params.genomes = [:]
}


// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

manifest {
    name            = 'nf-core/eager'
    author          = """The nf-core/eager community"""
    homePage        = 'https://github.com/nf-core/eager'
    description     = """A fully reproducible and state-of-the-art ancient DNA analysis pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=22.10.1'
    version         = '3.0.0dev'
    doi             = '10.7717/peerj.10947'
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
            return obj
        }
    }
}
